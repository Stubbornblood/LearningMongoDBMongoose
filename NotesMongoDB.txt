ollections are quite similar to tables in mongoDB
db.products.insertOne = ({
})

db.products.insertMany = ({
})

show collections   -> command use to see all collection in database

if collection is not exit previously it will be get created by the mongoDB

//How To Read Data inside collection

db.products.find() 
This above command will bring all the element which are present in products

To get Specific data as output let suppose you want to extract pensile data
db.products.find({name:"Pencil"})

To get product detail which having price greater then 1 we can do :

db.products.find({price:{$gt:1}})

gt -> greater then
lt -> lesser then
eq -> equal
ne -> notEqual

projection is second parameter for db 

db.products.find({_id:1},{name:1})

after specifying id we pass name as 1 which means we are asking terminal to
to return us name 1 represent true 

id we set _id:0 id will not be shown to us

db.products.find({_id:1},{name:1,_id:0})


//How to Update data in collection

db.products.updateOne({_id:1},{$set:{stock:32}})
set is used to updateOne collection products with new field stock with 32


//Delete data from collection
db.products.deleteOne({_id:2})

\\ODM -> Object Document Mapper ->Mongoose
use to establish connection between mongoDB and nodeJS
